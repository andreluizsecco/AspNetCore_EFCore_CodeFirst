// <auto-generated />
using System;
using AspNetCore_EFCore_CodeFirst.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AspNetCore_EFCore_CodeFirst.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210623012022_Migration2")]
    partial class Migration2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AspNetCore_EFCore_CodeFirst.Models.Categoria", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Categoria");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Nome = "Software"
                        });
                });

            modelBuilder.Entity("AspNetCore_EFCore_CodeFirst.Models.Livro", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<int>("CategoriaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric(38,2)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("ID");

                    b.HasIndex("CategoriaID");

                    b.HasIndex("Titulo")
                        .HasDatabaseName("IX_Livro_Titulo");

                    b.ToTable("Livro");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Autor = "Eric Evans",
                            CategoriaID = 1,
                            DataEntrada = new DateTime(2021, 6, 22, 22, 20, 22, 301, DateTimeKind.Local).AddTicks(7691),
                            Preco = 59.90m,
                            Quantidade = 26,
                            Titulo = "Domain-Driven Design: Tackling Complexity in the Heart of Software"
                        },
                        new
                        {
                            ID = 2,
                            Autor = "Robert C. Martin",
                            CategoriaID = 1,
                            DataEntrada = new DateTime(2021, 6, 22, 22, 20, 22, 302, DateTimeKind.Local).AddTicks(6753),
                            Preco = 45.90m,
                            Quantidade = 13,
                            Titulo = "Agile Principles, Patterns, and Practices in C#"
                        },
                        new
                        {
                            ID = 3,
                            Autor = "Robert C. Martin",
                            CategoriaID = 1,
                            DataEntrada = new DateTime(2021, 6, 22, 22, 20, 22, 302, DateTimeKind.Local).AddTicks(6769),
                            Preco = 33.90m,
                            Quantidade = 10,
                            Titulo = "Clean Code: A Handbook of Agile Software Craftsmanship"
                        },
                        new
                        {
                            ID = 4,
                            Autor = "Vaughn Vernon",
                            CategoriaID = 1,
                            DataEntrada = new DateTime(2021, 6, 22, 22, 20, 22, 302, DateTimeKind.Local).AddTicks(6771),
                            Preco = 59.90m,
                            Quantidade = 22,
                            Titulo = "Implementing Domain-Driven Design"
                        },
                        new
                        {
                            ID = 5,
                            Autor = "Scott Millet",
                            CategoriaID = 1,
                            DataEntrada = new DateTime(2021, 6, 22, 22, 20, 22, 302, DateTimeKind.Local).AddTicks(6824),
                            Preco = 42.90m,
                            Quantidade = 15,
                            Titulo = "Patterns, Principles, and Practices of Domain-Driven Design"
                        },
                        new
                        {
                            ID = 6,
                            Autor = "Martin Fowler",
                            CategoriaID = 1,
                            DataEntrada = new DateTime(2021, 6, 22, 22, 20, 22, 302, DateTimeKind.Local).AddTicks(6826),
                            Preco = 31.90m,
                            Quantidade = 5,
                            Titulo = "Refactoring: Improving the Design of Existing Code"
                        });
                });

            modelBuilder.Entity("AspNetCore_EFCore_CodeFirst.Models.Livro", b =>
                {
                    b.HasOne("AspNetCore_EFCore_CodeFirst.Models.Categoria", "Categoria")
                        .WithMany("Livros")
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("AspNetCore_EFCore_CodeFirst.Models.Categoria", b =>
                {
                    b.Navigation("Livros");
                });
#pragma warning restore 612, 618
        }
    }
}
